global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'
endglobal

# ┌────────┐
# │ Blocks │
# └────────┘
 
snippet main "main.tex" b
\documentclass{elegantbook}
\input{config/preamble}
\input{config/macros}

\title{$1}
\author{Jkevin}
\date{\today}

\begin{document}
\maketitle

${2:\input{$3}}

\end{document}
endsnippet


# ┌──────────────┐
# │ Environments │
# └──────────────┘

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet


snippet enum "Enumerate environment" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet
 

snippet item "Itemize environment" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

# specila for elegantbook

snippet def "Definition environment" bA
\begin{definition}[${1:name}] ${2: \label{def: $3}}
	$0	
\end{definition}
endsnippet

snippet thm "theorem environment" bA
\begin{theorem}[${1:name}] ${2: \label{thm: $3}}
	$0	
\end{theorem}
endsnippet

snippet intro "Introduction environment" b
\begin{introduction}[${1:Brief Introduction}]
	\item $0
\end{introduction}
endsnippet

snippet pset "Problem Set" b
\begin{problemset}
	\item $0
\end{problemset}
endsnippet
 
# ┌──────────────┐
# │ Math Content │
# └──────────────┘
 
snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
.\] $0
endsnippet


context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet invs "inverse" A
^{-1}
endsnippet

context "math()"
snippet fora "forall" wA
\forall
endsnippet

context "math()"
snippet inn "\in" wA
\in
endsnippet
